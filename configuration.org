#+TITLE: Kev's Configs
#+STARTUP: show2levels
* Fish Shell
** config.fish
#+BEGIN_SRC sh :tangle "/home/kev/dotfiles/fish/.config/fish/config.fish"
if status is-interactive
    # Commands to run in interactive sessionif status is-interactive
    # Commands to run in interactive sessions can go here
    zoxide init fish | source
    any-nix-shell fish --info-right | source
    set -gx ALTERNATE_EDITOR ''
    set -gx MANPAGER "nvim -c 'Man!'"
end

if status is-login
    set -gx YDOTOOL_SOCKET "/home/kev/.ydotool_socket"
end

# Created by `pipx` on 2023-05-25 21:07:51
set PATH $PATH /home/kev/.local/bin /home/kev/.config/emacs/bin
# set fish_function_path $fish_function_path $__fish_config_dir/functions/*/

#+END_SRC
** functions.fish
#+BEGIN_SRC sh :tangle "/home/kev/dotfiles/fish/.config/fish/functions/functions.fish"

function checkup # Update system flake
  pushd ~/NixOS && nix flake update --output-lock-file /dev/null && popd
end

function icat # Disply images in terminal
  kitty +kitten icat $argv
end

function arch # Enter Arch distrobox
  distrobox enter arch
end

function c # start clifm
  clifm --data-dir (dirname (readlink (which clifm)) | sed "s/bin/share/g") $argv
end

function vf # alias vifm to vf
  vifm $argv
end

function y # alias yazi to y
  # yazi $argv
  set tmp (mktemp -t "yazi-cwd.XXXXX")
	yazi --cwd-file="$tmp"
	if set cwd (cat -- "$tmp"); and [ -n "$cwd" ]; and [ "$cwd" != "$PWD" ]
		cd -- "$cwd"
	end
	rm -f -- "$tmp"
end

function funcs # List functions
  grep function ~/.config/fish/functions/functions.fish | sed 's/function//g' | sort
end

function funcedit # Edit Functions
  neovide  ~/.config/fish/functions/functions.fish && source ~/.config/fish/functions/functions.fish
end

function h
  Hyprland
end

function store # Visit app location in /nix/store
  cd (realpath (which $argv) | cut -d/ -f1-4)
end
#+END_SRC
* NixOS
** Header
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
{ pkgs, inputs, lib, ... }:

{
 imports = [ ./hardware-configuration.nix ];
 time.timeZone = "America/Toronto";
 i18n.defaultLocale = "en_CA.UTF-8";
 system.stateVersion = "22.11"; # Don't change unless fresh install from new ISO
#+END_SRC
** Hardware
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  hardware = {
    bluetooth.enable = true;
    cpu.amd.updateMicrocode = true;
    enableAllFirmware = true;
    enableRedistributableFirmware = true;
    pulseaudio.enable = false;
    opengl = {
      enable = true;
      # Vulcan
      driSupport = true;
      driSupport32Bit = true;
      # extraPackages = with pkgs; [
        # amdvlk
        # rocm-opencl-icd
        # rocm-opencl-runtime
      # ];
    };
  };
#+END_SRC
** Boot
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  boot = {
    extraModprobeConfig = ''
      options kvm ignore_msrs=1
    '';
    tmp.useTmpfs = true;
    # kernelModules = [ "amd-pstate" ];
    kernelPackages = pkgs.linuxPackages_latest;
    swraid.enable = false; # Setting needed as system state ver < 23.11
    initrd = {
      kernelModules = [ "amdgpu" ];
      systemd.network.wait-online.enable = false;
    };
    # --- BOOT LOADER --- {{{2
    loader = {
      systemd-boot.enable = true;
      efi = {
        canTouchEfiVariables = true;
        efiSysMountPoint = "/boot";
      };
      grub = {
        enable = false;
        copyKernels = true;
        efiSupport = true;
        devices = [ "nodev" ];
        useOSProber = true;
      };
    };
    # --- KERNEL PARAMS --- {{{2
    kernelParams = [
      #"initcall_blacklist=acpi_cpufreq_init"
      #"amd_pstate=active"
      # "nowatchdog"
      # "nmi_watchdog=0"
      "quiet"
      # "amd_iommu=on"
      # "iommu=pt"
    ];
  };
#+END_SRC
** Power Management
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  powerManagement = {
    enable = true;
    cpuFreqGovernor = lib.mkDefault "performance";
  };
#+END_SRC
** Networking
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  networking = {
    hostName = "halcyon";
    nameservers = [ "9.9.9.9" "2620:fe::fe" ];
    dhcpcd.extraConfig = "nohook resolv.conf";
    firewall.allowedTCPPorts = [ 80 8080 2121 2234 6475 6476 53317 ];
    firewall.allowedUDPPorts = [ 36475 53317 ];
    interfaces.enp42s0.wakeOnLan.enable = true;
    wireless.enable = false; # Enables wireless support via wpa_supplicant.
    networkmanager = {
      enable = true;
      dns = "none";
    };
  };
#+END_SRC
** XDG
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  xdg = {
    # --- Portals{{{2
    portal = {
      enable = true;
       # extraPortals = with pkgs; [
         # xdg-desktop-portal-wlr
         # xdg-desktop-portal-gtk
       # ];
    };
    # --- Mime Types{{{2
    mime = {
      enable = true;
      defaultApplications = {
        "application/pdf" = "org.pwmt.zathura.desktop";
        "application/vnd.apple.mpegurl" = "vlc.desktop";
        "application/x-extension-htm" = "firefox.desktop";
        "application/x-extension-html" = "firefox.desktop";
        "application/x-extension-shtml" = "firefox.desktop";
        "application/x-extension-xht" = "firefox.desktop";
        "application/x-extension-xhtml" = "firefox.desktop";
        "application/x-shellscript" = "neovide.desktop";
        "application/xhtml+xml" = "firefox.desktop";
        "audio/x-mpegurl" = "vlc.desktop";
        "image/png" = "feh.desktop";
        "text/*" = "neovide.desktop";
        "text/css" = "neovide.desktop";
        "text/html" = "firefox.desktop";
        "text/markdown" = "calibre-ebook-viewer.desktop";
        "text/plain" = "neovide.desktop";
        "video/*" = "umpv.desktop";
        "x-scheme-handler/chrome" = "firefox.desktop";
        "x-scheme-handler/http" = "firefox.desktop";
        "x-scheme-handler/https" = "firefox.desktop";
        "x-scheme-handler/mpv" = "open-in-mpv.desktop";
      };
    };
  };
#+END_SRC
** Systemd
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  systemd = {
    extraConfig = ''
      DefaultTimeoutStopSec=10s
    '';
    network.wait-online.enable = false; # Disable systemd "wait online" as it gets stuck waiting for connection on 2nd NIC
    services.NetworkManager-wait-online.enable = false;
  };
#+END_SRC
** Nix
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  nix = {
    extraOptions = ''
      experimental-features = nix-command flakes
    '';
    package = pkgs.nixFlakes;
    registry.nixpkgs.flake = inputs.nixpkgs; # Pin nixpkgs to speed up nix commands
    gc = {
      # Auto discard system generations
      automatic = true;
      dates = "daily";
      options = "--delete-older-than 2d";
    };
    nixPath = [
      "/etc/nix/inputs"
    ]; # Fix <nixpkgs> for flakes. See environment.etc."nix/inputs/nixpkgs"
    settings = {
      auto-optimise-store = true; # Auto optimize nix store.
      builders-use-substitutes = true;
      substituters = [
        "https://hyprland.cachix.org"
      ];
      trusted-public-keys = [ "hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc=" ];
    };
  };
#+END_SRC
** Environment
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  environment = {
    pathsToLink = [ "/libexec" ]; # enable polkit
    # --- ETC{{{2
    etc = {
      "xdg/gtk-3.0".source = ./gtk-3.0;
      "xdg/gtk-4.0".source = ./gtk-4.0;
      "xdg/wallpaper".source = ./wallpaper;
      "nix/inputs/nixpkgs".source =
        "${inputs.nixpkgs}"; # needed to fix <nixpkgs> on flake. See also nix.nixPath
    };
    # --- ENV VARIABLES{{{2
    variables = {
      # NIXOS_OZONE_WL = "1"; # hint electron apps to use wayland (Logseq doesn't like it.. slow start, crashy)
      ALTERNATE_EDITOR = ""; #allow emacsclient to start daemon if not already running
      CLUTTER_BACKEND = "wayland";
      EDITOR = "emacsclient -r";
      GDK_BACKEND = "wayland,x11";
      GTK_IM_MODULE = "ibus";
      NIX_ALLOW_UNFREE = "1";
      QT_AUTO_SCREEN_SCALE_FACTOR = "1";
      QT_IM_MODULE = "ibus";
      QT_QPA_PLATFORM = "wayland;xcb";
      QT_QPA_PLATFORMTHEME = "qt5ct";
      QT_WAYLAND_DISABLE_WINDOWDECORATION = "1";
      VISUAL = "emacsclient -r";
      XMODIFIERS = "@im=ibus";
      _JAVA_AWT_WM_NONREPARENTING = "1";
    };
#+END_SRC
** Environment.systemPackages
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
    systemPackages = with pkgs; [
      alsa-utils
      any-nix-shell
      archiver
      atool
      catppuccin-sddm-corners
      cmake
      glib
      gitFull
      gnome.adwaita-icon-theme
      gnumake
      jdk
      killall
      libcxxStdenv # Needed to build binaries for tree-sitter
      libinput
      libtool
      # libsForQt5.breeze-icons
      # libsForQt5.qt5ct
      lua
      lua-language-server
      mfcl2700dnlpr
      mfcl2700dncupswrapper
      neovim
      nil
      nixfmt-rfc-style
      nodejs
      nix-tree # Explore package dependencies
      nodePackages.bash-language-server
      os-prober
      pulseaudioFull
      python3
      sddm-chili-theme
      unar
      unzip
      usbutils
      xdg-utils # for openning default programms when clicking links
    ];
  };
#+END_SRC
** Services
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  services = {
    accounts-daemon.enable = true;
    avahi.enable = true;
    blueman.enable = false;
    dbus.enable = true;
    flatpak.enable = true;
    geoclue2.enable = true;
    gnome.gnome-keyring.enable = true;
    gvfs.enable = true; # Mount, trash, and other functionalities
    openssh.enable = false;
    printing.drivers = [ pkgs.brlaser ];
    printing.enable = true;
    tumbler.enable = true; # Thumbnail support for images
    # --- DESKTOPMANAGER.PLASMA6{{{2
    desktopManager = {
      plasma6.enable = false;
    };
    # --- DISPLAY MANAGER{{{2
    displayManager = {
      # startx.enable = true; # console login
      defaultSession = "hyprland";
      sddm = {
        enable = true;
        theme = "catppuccin-sddm-corners";
        wayland.enable = true;
      };
    };
    # --- FRESH-RSS{{{2
    freshrss = {
      enable = true;
      baseUrl = "http://freshrss";
      defaultUser = "kev";
      passwordFile = "/run/secrets/freshrss";
      authType = "none";
    };
    # --- FSTRIM{{{2
    fstrim = {
      enable = true;
      interval = "weekly"; # the default
    };
    # --- PIPEWIRE{{{2
    pipewire = {
      enable = true;
      alsa.enable = true;
      alsa.support32Bit = true;
      pulse.enable = true;
      jack.enable = true;
    };
    # --- XSERVER{{{2
    xserver = {
      enable = true;
      xkb = {
        layout = "us";
        variant = "";
      };
      deviceSection = ''Option "TearFree" "true"'';
      # --- DESKTOP MANAGER{{{3
      desktopManager = {
        xterm.enable = false;
        gnome.enable = false;
        xfce = {
          enable = false;
          enableXfwm = false;
        };
      };
      # --- LIBINPUT{{{3
      libinput = {
        enable = true;
        mouse = {
          accelProfile = "flat";
          accelSpeed = "1.2";
          # buttonMapping = "1 8 3 4 5 6 7 2 9";
          # scrollMethod = "button";
          # scrollButton = 3;
        };
      };
      # --- WINDOW MANAGER{{{3
      windowManager = {
        i3 = {
          enable = false;
          extraPackages = [
            # lxappearance
            # feh
          ];
        };
      };
    };
  };
#+END_SRC
** QT
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  qt = {
    enable = true;
    platformTheme = "qt5ct";
    style = "kvantum";
  };
#+END_SRC
** Fonts
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  fonts = {
    # fontDir.enable = true;
    packages = with pkgs; [
      font-awesome
      noto-fonts-lgc-plus
      noto-fonts-color-emoji
      source-code-pro
      victor-mono
      (nerdfonts.override { fonts = [ "FiraCode" ]; })
    ];
  };
#+END_SRC
** Security
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  security = {
    polkit.enable = true;
    rtkit.enable = true;
    sudo.extraRules = [
      {
        users = [ "kev" ];
        commands = [
          {
            command = "ALL";
            options = [ "NOPASSWD" ];
          }
        ];
      }
    ];
  };
#+END_SRC
** Virtualisation
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  virtualisation = {
    docker = {
      enable = false;
    };
    podman = {
      enable = true;
      dockerCompat = true;
      dockerSocket.enable = true;
    };
    libvirtd = {
      enable = true;
      onBoot = "ignore";
      onShutdown = "shutdown";
      qemu = {
        runAsRoot = true;
      };
    };
  };
#+END_SRC
** Users
*** Settings
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  users.users.kev = {
    isNormalUser = true;
    description = "kev";
    extraGroups =
      [ "networkmanager" "adbusers" "wheel" "kvm" "libvirtd" "input" "audio" "podman" "docker" ];
    # shell = pkgs.fish;
#+END_SRC
*** Packages
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
    packages = with pkgs; [
      alacritty
      # android-tools
      # anydesk
      appeditor
      arc-theme
      archiver
      authenticator
      bat
      # bitwarden
      btop
      calibre
      cargo
      cava # Terminal audio visualizer
      celestia
      clifm
      cliphist
      diff-so-fancy
      discord
      distrobox
      # docker
      dracula-theme
      emacs
      emacsPackages.all-the-icons-nerd-fonts
      eza
      fd
      feh
      fishPlugins.tide
      fishPlugins.puffer
      fishPlugins.grc
      fishPlugins.fzf
      fishPlugins.autopair
      foliate
      fuzzel # Launcher
      fzf
      gammastep
      gdu # Disk space analyzer
      gnome-extension-manager
      gnome.gnome-tweaks
      gnome.file-roller
      gnome.gnome-clocks
      grc # generic text colourizer. Using with fishPlugins.grc
      grim
      gucharmap
      helix
      http-server # Simple http server. Using with surfingkeys config.
      hyprpicker
      hyprshade
      inputs.hyprland-contrib.packages.${pkgs.system}.grimblast # Wrapper for grim/slurp. . Using flake as nixpkgs ver pulls in old hyprland
      jc # Convert output to json for many utils. Useful with Nushell
      jgmenu
      jq
      kdePackages.kalarm
      kdePackages.polkit-kde-agent-1
      kdePackages.qtstyleplugin-kvantum
      kdePackages.qt6ct
      kitty
      lazygit
      libnotify
      libsForQt5.qtstyleplugin-kvantum
      # localsend
      # logseq
      # lunarvim
      mako
      marksman # Language server for markdown.
      mediainfo # Provides info on media files.
      meld
      (mpv.override { scripts = [ mpvScripts.mpris mpvScripts.sponsorblock mpvScripts.visualizer ]; })
      mpv-shim-default-shaders
      ncdu
      ncpamixer
      neovide # Nvim gui front end
      nh # nix helper
      nix-prefetch-git
      nix-search-cli
      nushell
      nvd # Nix derivation diff tool
      pamixer
      pavucontrol
      pistol # File preview for clifm
      playerctl
      qalculate-gtk
      qmplay2
      ripgrep
      scrcpy
      slurp
      spotify
      steam-run
      stellarium
      stow
      stylua
      swaybg
      swayidle
      swaylock
      syncthing
      tartube # Front end for yt-dlp
      tealdeer # Command line help 'tldr'
      thunderbird
      treesheets
      ueberzugpp
      nodePackages.tiddlywiki
      tree-sitter
      virt-manager
      # vivaldi
      # vivaldi-ffmpeg-codecs
      vlc
      wakeonlan # For lgtv control

      waybar
      # inputs.nixpkgs-trunk.legacyPackages.${pkgs.system}.waybar

      waypaper
      websocat # For lgtv control
      wttrbar
      wev
      wget
      wl-clipboard # wl-copy and wl-paste for copy/paste from stdin / stdout
      wofi
      wtype # For wofi-emoji
      yad
      yazi
      ydotool
      yt-dlp
      zathura
      zoxide
    ];
  };
#+END_SRC
** Programs
*** General
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  programs = {
    adb.enable = true;
    command-not-found.enable = false;
    dconf.enable = true;
    ssh.startAgent = true;
    neovim = { vimAlias = true; };
#+END_SRC
*** Firefox
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
    firefox = {
      enable = true;
      # nativeMessagingHosts.packages = [ pkgs.fx-cast-bridge ];
    };
#+END_SRC
*** Fish
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
    fish = {
      enable = true;
      # --- Prompt{{{3
      promptInit = ''
        ${pkgs.any-nix-shell}/bin/any-nix-shell fish --info-right | source
      '';
      # --- Abbr{{{3
      shellAbbrs = {
        "npi --set-cursor" = "nix profile install nixpkgs#%";
        "ns --set-cursor" = "nix shell nixpkgs#%";
        "nr --set-cursor" = "nix run nixpkgs#%";
      };
      # --- Aliases{{{3
      shellAliases = {
        cat = "bat";
        conf = "emacsclient -r  ~/NixOS/configuration.org";
        dg = "nh clean all";
        e = "emacsclient -nw";
        ee = "emacsclient -r";
        gcroots = "sudo nix-store --gc --print-roots | grep -Ev '^(/proc|/nix|/run)'";
        lg = "lazygit";
        lp = "nix profile list | grep -E 'Flake attribute|Index'";
        np = "nh search"; # search nix packages
        # rb = "sudo nixos-rebuild switch --flake '/home/kev/NixOS#halcyon' && nix flake archive /home/kev/NixOS && /home/kev/bin/sysdiff";
        rb = "nh os switch ~/NixOS";
        referrer = "nix-store --query --referrers";
        repair-store = "sudo nix-store --verify --check-contents --repair";
        rp = "nix profile remove ";
        # sdg = "sudo nix-collect-garbage -d";
        sg = "sudo nix-env --list-generations --profile /nix/var/nix/profiles/system";
        sgc = "sudo nix store gc -v";
        storebin = "nix-store -q --roots (which $argv)";
        sys = "sudo du -hs /nix/store/ /var/";
        # udg = "nix-collect-garbage -d";
        udg = "nh clean user";
        ug = "nix-env --list-generations";
        ugc = "nix store gc -v";
        # up = "nix flake update /home/kev/NixOS";
        up = "nh os switch --update --ask ~/NixOS";
        uup = "nix profile upgrade '.*'";
        verify-store = "sudo nix-store --verify --check-contents";
      };
      # --- Interactive Shell Init{{{3
      interactiveShellInit = '' # Set Neovim as default man viewer
        set -x MANPAGER "nvim -c 'Man!'"
      '';
    };
#+END_SRC
*** Fuse
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
    fuse = {
      userAllowOther = true;
    };
#+END_SRC
*** FZF
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
    fzf = {
      keybindings = true;
      fuzzyCompletion = true;
    };
#+END_SRC
*** Hyprland
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
    hyprland = {
      enable = true;
      package = inputs.hyprland.packages.${pkgs.system}.hyprland;
    };
#+END_SRC
*** Nix-Index
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
    nix-index = {
      enable = true;
      enableFishIntegration = true;
    };
#+END_SRC
*** Nix-ld
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
    nix-ld = {
      enable = true;
        libraries = with pkgs; [
          # Add missing dynamic libraries for unpackged programs here.. not systemPackages or user packages.
          alsa-lib
          at-spi2-atk
          at-spi2-core
          atk
          cairo
          cups
          curl
          dbus
          expat
          fontconfig
          freetype
          fuse3
          gdk-pixbuf
          glib
          gtk2
          gtk2-x11
          gtk3
          gtk3-x11
          gtk4
          harfbuzz
          icu
          krb5
          libGL
          libappindicator-gtk3
          libdrm
          libglvnd
          libnotify
          libpulseaudio
          libunwind
          libusb1
          libuuid
          libxkbcommon
          libxml2
          mesa
          nspr
          nss
          openssl
          pango
          pipewire
          stdenv.cc.cc
          systemd
          vulkan-loader
          xorg.libX11
          xorg.libXScrnSaver
          xorg.libXcomposite
          xorg.libXcursor
          xorg.libXdamage
          xorg.libXext
          xorg.libXfixes
          xorg.libXi
          xorg.libXrandr
          xorg.libXrender
          xorg.libXtst
          xorg.libxcb
          xorg.libxkbfile
          xorg.libxshmfence
          xorg.libXinerama
          zlib
        ];
    };
#+END_SRC
*** Sway
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
    sway = {
      enable = true;
      wrapperFeatures.gtk = true;
    };
#+END_SRC
*** Thunar
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
    thunar = {
      enable = true;
      plugins = with pkgs.xfce; [
        thunar-archive-plugin
        thunar-volman
      ];
    };
  }; #End of programs
#+END_SRC
** Nixpkgs
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/configuration.nix"
  nixpkgs.config = {
    allowUnfree = true;
    # permittedInsecurePackages = [ "electron-25.9.0" ];
  };
} #End of configuration.nix
#+END_SRC

* NixOS (Flake)
#+BEGIN_SRC nix :tangle "/home/kev/NixOS/flake.nix"
{
  description = "Halcyon System Configuration";

  inputs = {
    nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";
    # nixpkgs-stable.url = "github:nixos/nixpkgs/nixos-23.11";
    # nixpkgs-trunk.url = "github:nixos/nixpkgs";
    # niri.url = "github:sodiboo/niri-flake";
    hyprland.url = "github:hyprwm/Hyprland";
    hyprland-contrib = {
      url = "github:hyprwm/contrib";
      inputs.nixpkgs.follows = "nixpkgs";
    };
    hyprland-plugins = {
      url = "github:hyprwm/hyprland-plugins";
      inputs.hyprland.follows = "hyprland";
    };
  };

  outputs = inputs@{ self, nixpkgs, ... }: {
    nixosConfigurations = {
      halcyon = nixpkgs.lib.nixosSystem {
        specialArgs = { inherit inputs; };
        system = "x86_64-linux";
        modules = [
          ./configuration.nix
          ({ pkgs, ... }: {
            nix.registry.sys = {
              from = {
                type = "indirect";
                id = "sys";
              };
              flake = nixpkgs;
            };
          })
          # niri.nixosModules.niri
          # {
          #   programs.niri.enable = true;
          # }
          # { # If you wish to use the unstable version of niri, you can set it like so:
          #   nixpkgs.overlays = [ niri.overlays.niri ];
          #   # programs.niri.package = pkgs.niri-unstable;
          # }
        ];
      };
    };
  };
}

#+END_SRC
* Hyprland
** Autostarts
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
exec-once = hyprshade auto
exec-once = waypaper --restore
exec-once = emacs --daemon
# exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = /home/kev/bin/nixos-polkit-agent
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=$XDG_CURRENT_DESKTOP
exec-once = waybar
exec-once = configure-gtk &
# exec-once = gammastep-indicator -c ~/.config/gammastep/gammastep.conf
exec-once = ssh-add
exec-once = wl-paste --watch cliphist store
exec-once = mako -c ~/.config/mako/config
exec-once = [workspace 8 silent] alacritty -e http-server -p 8085 -c-1 ~/dotfiles/firefox_ext_confs/surfingkeys
# exec-once = syncthing serve
# exec-once = localsend autostart
exec-once = [workspace 8 silent] alacritty -e tiddlywiki /home/kev/Code/tiddiwiki --listen host=localhost port=8081
exec-once = playerctld daemon
exec-once = sudo -b ydotoold --socket-path="$HOME/.ydotool_socket" --socket-own="$(id -u):$(id -g)"
exec-once = [workspace 7 silent] kalarm
exec-once = [workspace 6 silent] discord
exec-once = [workspace 3 silent] emacsclient -c ~/NixOS/configuration.org
exec-once = [workspace 2 silent] alacritty
exec-once = [workspace 1] firefox
#+END_SRC
** Inputs
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options = ctrl:nocaps
    kb_rules =
    follow_mouse = 1

    touchpad {
        natural_scroll = false
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
    numlock_by_default = true
}
#+END_SRC
** General
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
general {

    gaps_in = 5
    gaps_out = 5
    border_size = 1
   # col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.active_border = rgba(7984A4ee)
    col.inactive_border = rgba(595959aa)
    cursor_inactive_timeout = 2
    layout = master
}
#+END_SRC
** Decoration
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
decoration {
    blur {
        enabled = false
        size = 10
        passes =1
        new_optimizations = true
        ignore_opacity = true
        noise = 0
        brightness = 0.60
    }
    active_opacity = 1.00
    inactive_opacity = 0.95
    rounding = 0
    drop_shadow = true
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
}
#+END_SRC
** Animations
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
animations {
    enabled = yes
    bezier = wind, 0.05, 0.9, 0.1, 1.05
    bezier = winIn, 0.1, 1.1, 0.1, 1.1
    bezier = winOut, 0.3, -0.3, 0, 1
    bezier = liner, 1, 1, 1, 1
    animation = windows, 1, 2, wind, slide
    animation = windowsIn, 1, 2, winIn, slide
    animation = windowsOut, 1, 2, winOut, slide
    animation = windowsMove, 1, 2, wind, slide
    animation = border, 1, 1, liner
    animation = borderangle, 1, 30, liner, loop
    animation = fade, 1, 10, default
    animation = workspaces, 1, 2, wind
}
#+END_SRC
** Layouts
*** Dwindle
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
dwindle {
    pseudotile = true # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true # you probably want this
}
#+END_SRC
*** Master
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
master {
    new_is_master = true
    orientation = right
    special_scale_factor = 0.98
    no_gaps_when_only = 1
    drop_at_cursor = true
}
#+END_SRC
** Misc
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
monitor=DP-3,2560x1440@165,0x0,1
misc {
    disable_hyprland_logo = true
    mouse_move_enables_dpms = true
    key_press_enables_dpms = true
}
env = XCURSOR_SIZE,24
# Blur Waybar background
blurls = waybar

# --- Gestures{{{1
gestures {
    workspace_swipe = false
}

binds {
      workspace_back_and_forth = true
}
#+END_SRC
** Window Rules
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
windowrulev2 = float,class:firefox,title:Picture-in-Picture
windowrulev2 = float,class:qalculate-gtk
windowrulev2 = move 1435 35,class:qalculate-gtk
windowrulev2 = size 25% 25%,class:qalculate-gtk
windowrulev2 = workspace special:calculator,class:(qalculate-gtk)
windowrulev2 = workspace special:discord,class:discord
windowrulev2 = float,class:popterm
windowrulev2 = workspace special:popterm,class:popterm
windowrulev2 = move 250 50,class:popterm
windowrulev2 = size 75% 90%,class:popterm
windowrulev2 = float,class:neovide
windowrulev2 = move 250 50,class:neovide
windowrulev2 = size 75% 90%,class:neovide
windowrulev2 = workspace special:editor,class:neovide
#windowrulev2 = workspace special:editor,class:Emacs
windowrulev2 = float,title:LGTV
windowrulev2 = center,title:LGTV
windowrulev2 = move 1600 35,title:LGTV
windowrulev2 = stayfocused,class:sudoku-Main, floating:1, fullscreen:0
#+END_SRC

** Keybinds
*** General
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
  bind = SUPER CONTROL, grave, movetoworkspace,e+0
  bind = SUPER SHIFT, grave, movetoworkspace,special
  bind = SUPER, grave, togglespecialworkspace
  bind = SUPER SHIFT, Q, exit,
  bind = SUPER SHIFT, X, killactive,
  bind = SUPER SHIFT, space, togglefloating
  bind = SUPER, S, pseudo
  bind = SUPER, KP_DIVIDE, exec, systemctl suspend
  bind = SUPER, up, movefocus, u
  bind = SUPER, down, movefocus, d
  bind = SUPER, left, movefocus, l
  bind = SUPER, right, movefocus, r
  bind = SUPER, Backspace, fullscreen, 1
  bind = SUPER SHIFT, Backspace, fakefullscreen, 1
  bind = SUPER, KP_Add, exec, /home/kev/bin/hyprzoom in
  bind = SUPER, KP_Subtract,exec, /home/kev/bin/hyprzoom reset
  bind = SUPER, e, exec, umpv --ytdl-format=bestvideo+bestaudio/best --fs "$(wl-paste)" # Play clipboard link with mpv
  bind = SUPER SHIFT, s, exec, hyprshade toggle
#+END_SRC
*** Launchers
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
  bind = SUPER SHIFT, W, exec, waypaper
  bind = ,F10, exec, ydotool mousemove -a -x 0 -y 1920
  bind = SUPER SHIFT, Z, exec, pkill wofi || wofi --show run
  bind = SUPER SHIFT, c, exec, cliphist wipe
  bind = SUPER, KP_ENTER, exec, toggle_term
  bind = SUPER, KP_MULTIPLY, exec, pgrep qalculate-gtk && hyprctl dispatch togglespecialworkspace calculator || qalculate-gtk
  bind = SUPER, code:90, exec, pgrep -i discord && hyprctl dispatch togglespecialworkspace discord || discord
  bind = SUPER, Z, exec, pkill fuzzel || fuzzel --show-actions
  bind = SUPER, b, exec, pkill waybar || waybar
  bind = SUPER, c, exec, ~/bin/show_cliphist
  bind = SUPER, code:91, exec, toggle_editor
  bind = SUPER, return, exec, alacritty
  bind = SUPER, p, exec, hyprpicker -a
#+END_SRC
*** Master Layout Binds
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
  bind = SUPER, M, layoutmsg, addmaster
  bind = SUPER SHIFT, M, layoutmsg, removemaster
  bind = SUPER SHIFT, left, layoutmsg, swapprev
  bind = SUPER SHIFT, return, layoutmsg, swapwithmaster auto
  bind = SUPER SHIFT, right, layoutmsg, swapnext
  bind = SUPER, bracketleft, layoutmsg, orientationprev
  bind = SUPER, bracketright, layoutmsg, orientationnext
#+END_SRC
*** Audio
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
bind = ,XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +1%
bind = ,XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -1%
bind = ,XF86AudioMute, exec, ~/bin/toggle_mute
#+END_SRC
*** MPRIS
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
# KP_7, KP_8, KP_9 not working, so used keycodes
bind = SUPER, code:79, exec, playerctl play-pause
bind = SUPER, code:80, exec, playerctl previous
bind = SUPER, code:81, exec, playerctl next
bind = SUPER, code:83, exec, playerctld shift && ~/bin/currentPlayer
bind = SUPER, code:84, exec, playerctld unshift && ~/bin/currentPlayer
#+END_SRC
*** LGTV
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
bind = SUPER, Delete, exec, ~/bin/lgtv system turnOff
bind = SUPER SHIFT, Delete, exec, ~/bin/lgtv wakeonlan
bind = SUPER, Prior, exec, ~/bin/lgtv audio setMute true
bind = SUPER SHIFT, Prior, exec, ~/bin/lgtv audio setMute false
bind = SUPER, Next, exec, ~/bin/lgtv audio volumeDown
bind = SUPER SHIFT, Next, exec, ~/bin/lgtv audio volumeUp
bind = SUPER, t, exec, ~/bin/lgtvgui
#+END_SRC
*** Workspace Switching
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
bind = SUPER, TAB, exec, /home/kev/bin/Hyprswitch
bind = SUPER ALT, left, workspace, e-1
bind = SUPER ALT, right, workspace, e+1
bind = SUPER, mouse_down, workspace, e+1
bind = SUPER, mouse_up, workspace, e-1
bind = SUPER, 1, workspace, 1
bind = SUPER, 2, workspace, 2
bind = SUPER, 3, workspace, 3
bind = SUPER, 4, workspace, 4
bind = SUPER, 5, workspace, 5
bind = SUPER, 6, workspace, 6
bind = SUPER, 7, workspace, 7
bind = SUPER, 8, workspace, 8
bind = SUPER, 9, workspace, 9
bind = SUPER, 0, workspace, 10
#+END_SRC
*** Window Move/Resize
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
bind = SUPER SHIFT, 1, movetoworkspace, 1
bind = SUPER SHIFT, 2, movetoworkspace, 2
bind = SUPER SHIFT, 3, movetoworkspace, 3
bind = SUPER SHIFT, 4, movetoworkspace, 4
bind = SUPER SHIFT, 5, movetoworkspace, 5
bind = SUPER SHIFT, 6, movetoworkspace, 6
bind = SUPER SHIFT, 7, movetoworkspace, 7
bind = SUPER SHIFT, 8, movetoworkspace, 8
bind = SUPER SHIFT, 9, movetoworkspace, 9
bind = SUPER SHIFT, 0, movetoworkspace, 10
bindm = SUPER, mouse:272, movewindow
bindm = SUPER, mouse:273, resizewindow
#+END_SRC
*** Screenshots
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
bind = SUPER, S, exec, ~/bin/wofi_grimblast
#+END_SRC
*** Notification Controls
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
bind = SUPER, A, exec, makoctl menu wofi -W 15% -H 10% -x 800 -y 5 -d -p 'Choose Action: '
bind = SUPER SHIFT, D, exec, makoctl restore
bind = SUPER, D, exec, makoctl dismiss
#+END_SRC
*** Submaps
**** General
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
bind = SUPER, R, submap, resize
bind = SUPER, L, submap, launcher
#+END_SRC
**** Resize
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
submap=resize
binde=,right,resizeactive,20 0
binde=,left,resizeactive,-20 0
binde=,up,resizeactive,0 -20
binde=,down,resizeactive,0 20
bind = ,escape, submap, reset
#+END_SRC
**** Launcher
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/hyprland/.config/hypr/hyprland.conf"
submap=launcher
bind =, f, exec, firefox
bind =, f, submap, reset
bind =, e, exec, emacsclient -c
bind =, e, submap, reset
bind =, v, exec, neovide --neovim-bin lvim
bind =, v, submap, reset
bind =, s, exec, ~/Games/Hodoku/hodoku
bind =, s, submap, reset
bind =, escape, submap, reset
submap=reset
#+END_SRC
* Surfingkeys
** Constants
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
const {
  aceVimMap,
  mapkey,
  imap,
  imapkey,
  KeyboardUtils,
  getClickableElements,
  vmapkey,
  vmap,
  map,
  unmap,
  unmapAllExcept,
  vunmap,
  cmap,
  addSearchAlias,
  removeSearchAlias,
  tabOpenLink,
  readText,
  Clipboard,
  Front,
  Hints,
  Visual,
  RUNTIME
} = api;

#+END_SRC
** Functions
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
function mouseOver(element){
  let event = new MouseEvent('mouseover', {
    'view': window,
    'bubbles': true,
    'cancelable': true
  });
  element.dispatchEvent(event);
}
function mouseOut(element){
  let event = new MouseEvent('mouseout', {
    'view': window,
    'bubbles': true,
    'cancelable': true
  });
  element.dispatchEvent(event);
}
#+END_SRC
** Keybinds
*** Remap
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
map('E', 'x');
map('<Ctrl-E>', 'X');
map('x', 'T');
map('<ArrowUp>', 'k');
map('<ArrowDown>', 'j');
map('a', '<shift-d>', /8kun.top/); //remap mouseout to an easier key for 8kun
map('<Alt-`>', '<Ctrl-6>');
map('e', 'ya')
imap('<Alt-`>', '<Ctrl-6>');
vmap('<ArrowLeft>', 'h');
vmap('<ArrowRight>', 'l');
vmap('<ArrowUp>', 'k');
vmap('<ArrowDown>', 'j');
cmap('<ArrowUp>', '<Tab>');
cmap('<ArrowDown>', '<Shift-Tab>');
#+END_SRC
*** Unmap
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
unmapAllExcept(['f', 'q', 'i', ';e', 't', 'X', '<Alt-`>'], /mail.google.com/i);
unmapAllExcept(["f", "q", ";e", "t", "m", "X", "<Alt-`>", "'"], /www.sudokuslam.com/i);
// Unbind defaults
unmap('g0');
unmap('g$');
unmap('gx0');
unmap('gxt');
unmap('gxT');
unmap('gx$');
unmap('gxp');
unmap('gxx');
unmap('R');
unmap(';gt');
unmap(';gw');
unmap('>>');
unmap('<<');
unmap('sb');
unmap('sw');
unmap('W');
//unmap('x');
unmap('X');
unmap('i', /8kun/);
unmap('n', /twitter.com/);
unmap('.', /twitter.com/);
#+END_SRC
*** Map
**** Function Binds
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
mapkey('d', 'Mouse Over', function(){
  Hints.create("", function(element){
      mouseOver(element);
  }, {multipleHits: false})
}, {domain: /.*/ig});
mapkey('h', 'Mouse Move', function(){
  Hints.create("", function(element){
      mouseIn(element);
  }, {multipleHits: false})
}, {domain: /.*/ig});
mapkey('D', 'Mouse Out', function(){
  Array.from(document.querySelectorAll('a')).forEach(a => {
      mouseOut(a);
  })
}, {domain: /.*/ig});
#+END_SRC

**** Domain Specific Binds
***** GAW
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
mapkey('h', 'Jump to HOT', function() {
   window.open('/', '_self');
}, {domain: /.win/});
mapkey('n', 'Jump to NEW', function() {
   window.open('/new', '_self');
}, {domain: /.win/});
#+END_SRC
***** Telegram
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
mapkey('f', 'Custom hints for Telegram', function() {
    Hints.create(".anchor-url, .row-clickable, .toggle-emoticons, .emoji, .btn-icon, .rp, .reaction, video, canvas, .interactive.dark.media-inner, .CommentButton, .icon-smile.icon, .icon-attach.icon, .icon-arrow-right.icon, .icon-search.icon, .ripple-container, .icon-calendar.icon, div.clickable.div-button.day-button, .primary.default.Button, .icon-previous.icon, .icon-next.icon", Hints.dispatchMouseClick);
}, {domain: /web.telegram.org/});
#+END_SRC
***** Sudokuslam
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
mapkey('<Space>', 'Custom Hints for SudokuSlam', function() {
   Hints.create("#win-another-puzzle, #pausebox", Hints.dispatchMouseClick);
}, {domain: /www.sudokuslam.com/});

mapkey('h', 'Get hint for SudokuSlam', function() {
   Hints.create("#get-hint-go", Hints.dispatchMouseClick);
}, {domain: /www.sudokuslam.com/});
#+END_SRC
***** 8kun
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
mapkey('f', 'Custom Hints for 8kun', function() {
   Hints.create("\
   img, img[title='Collapse-video'], video, a[class^='mentioned'], a[href*='qresearch'],.post-btn, .post-submenu, .post-item, a[title='Options'],\
   .options_tab_icon, .linkifyplus, .spoiler, a.hoverZoomLink\
   ", Hints.dispatchMouseClick);
}, {domain: /8kun.top/});

mapkey('i', '8kun image hover', function() {
   Hints.create("img", imageHoverStart);
}, {domain: /8kun.top/});

mapkey('C', 'Open QResearch Catalog', function() {
   window.open('https://8kun.top/qresearch/catalog.html', '_self');
}, {domain: /8kun.top/});
#+END_SRC
***** X
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
mapkey('l', 'Custom hints for X - Like', function() {
    Hints.create("div[data-testid='like']", Hints.dispatchMouseClick);
}, {domain: /twitter.com/});

mapkey('n', 'X-Community Notes', function() {
   window.open('https://twitter.com/i/communitynotes', '_self');
}, {domain: /twitter.com/});
#+END_SRC
***** DDG
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
mapkey('f', 'Custom hints for DDG', function() {
    Hints.create("a[data-testid='result-title-a'], .js-dropdown-button, .js-dropdown-items, .zcm__link, #more-results, .js-images-show-more.module__header--link.module__header, .hide--mob.module__footer.js-images-show-more", Hints.dispatchMouseClick);
}, {domain: /duckduckgo.com/});
#+END_SRC
***** Tiddlywiki
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
mapkey('h', 'Tiddiwiki - Go to Index', function() {
//   window.open('http://10.0.0.167:8081/#Index:Index', '_self');
    Hints.create("button[aria-label='home']", Hints.dispatchMouseClick);
}, {domain: /10.0.0.167/});

mapkey('n', 'Tiddiwiki - New Tiddler', function() {
    Hints.create("button[aria-label='new tiddler']", Hints.dispatchMouseClick);
}, {domain: /10.0.0.167/});

mapkey('j', 'Tiddiwiki - New Journal', function() {
    Hints.create("button[aria-label='new journal']", Hints.dispatchMouseClick);
}, {domain: /10.0.0.167/});

mapkey('x', 'Tiddiwiki - Close Tiddler', function() {
    Hints.create(".tc-tiddler-controls>button[aria-label='close']", Hints.dispatchMouseClick);
}, {domain: /10.0.0.167/});

mapkey('e', 'Tiddiwiki - Edit Tiddler', function() {
    Hints.create("button[aria-label='edit'", Hints.dispatchMouseClick);
}, {domain: /10.0.0.167/});
#+END_SRC
***** Youtube
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
mapkey('l', 'Custom hints for Youtube - Like', function() {
    Hints.create("html body ytd-app div#content.style-scope.ytd-app ytd-page-manager#page-manager.style-scope.ytd-app ytd-watch-flexy.style-scope.ytd-page-manager.hide-skeleton div#columns.style-scope.ytd-watch-flexy div#primary.style-scope.ytd-watch-flexy div#primary-inner.style-scope.ytd-watch-flexy div#below.style-scope.ytd-watch-flexy ytd-watch-metadata.watch-active-metadata.style-scope.ytd-watch-flexy div#above-the-fold.style-scope.ytd-watch-metadata div#top-row.style-scope.ytd-watch-metadata div#actions.item.style-scope.ytd-watch-metadata div#actions-inner.style-scope.ytd-watch-metadata div#menu.style-scope.ytd-watch-metadata ytd-menu-renderer.style-scope.ytd-watch-metadata div#top-level-buttons-computed.top-level-buttons.style-scope.ytd-menu-renderer segmented-like-dislike-button-view-model.YtSegmentedLikeDislikeButtonViewModelHost.style-scope.ytd-menu-renderer yt-smartimation.smartimation.smartimation--enable-masking div.smartimation__content div.YtSegmentedLikeDislikeButtonViewModelSegmentedButtonsWrapper like-button-view-model.YtLikeButtonViewModelHost toggle-button-view-model button-view-model.yt-spec-button-view-model button.yt-spec-button-shape-next.yt-spec-button-shape-next--tonal.yt-spec-button-shape-next--mono.yt-spec-button-shape-next--size-m.yt-spec-button-shape-next--icon-leading.yt-spec-button-shape-next--segmented-start yt-touch-feedback-shape div.yt-spec-touch-feedback-shape.yt-spec-touch-feedback-shape--touch-response div.yt-spec-touch-feedback-shape__fill", Hints.dispatchMouseClick);
}, {domain: /youtube.com/});
#+END_SRC
** Settings
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
settings.scrollStepSize = 200;
settings.hintAlign = "left";
settings.richHintsForKeystroke = 500;
settings.focusFirstCandidate = false;
settings.focusAfterClose = "last";
settings.scrollFriction = 0;
settings.defaultSearchEngine = "d";
settings.enableEmojiInsertion = true;
settings.tabsThreshold = 0;
settings.omnibarPosition = "bottom";
// settings.cursorAtEndOfInput = false;
//settings.nextLinkRegex = '/(\b(>>|next|more|continue)\b)/i';
//settings.prevLinkRegex = '/(\b(<<|prev(ious)?|back)\b)/i';
settings.clickablePat = '/(https?|thunder|magnet):\/\/\S+/i';
settings.stealFocusOnLoad = true;
settings.ignoredFrameHosts = ["https://tpc.googlesyndication.com"]; //maybe figure out which youtube frames to ignore..
settings.modeAfterYank = 'Normal';
//settings.editableSelector = '/textarea/i'
Hints.setNumeric();
Hints.style('border: solid 3px #387da4; color:#efe1eb; background: none; background-color: #387da4;');
Hints.style("div{border: solid 3px #707070; color:#efe1eb; background: none; background-color: #552a48;} div.begin{color:#efe1eb;}", "text");

// Override Settings
//if (window.location.origin === "https://duckduckgo.com") {
//    settings.nextLinkRegex = /more results/i;
//}
if (window.location.origin === "https://www.sudokuslam.com") {
    settings.digitForRepeat = false;
}
if (window.location.origin === "https://www.youtube.com") {
    settings.digitForRepeat = false;
}
#+END_SRC
** Search Aliases
*** Removed
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
removeSearchAlias('b');
removeSearchAlias('g');
removeSearchAlias('w');
#+END_SRC
*** Added
#+BEGIN_SRC js :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
addSearchAlias('am', 'Amazon', 'https://www.amazon.ca/s?k=');
addSearchAlias('br', 'Brave Search', 'https://search.brave.com/search?q=');
addSearchAlias('di', 'Dictionary', 'https://www.britannica.com/dictionary/');
addSearchAlias('dd', 'DDG', 'https://duckduckgo.com/?t=h_&q=');
addSearchAlias('gh', 'Github General', 'https://github.com/search?&q=');
addSearchAlias('ghc', 'Github Code', 'https://github.com/search?type=code&q=');
addSearchAlias('ghp', 'Search Nix PRs', 'https://github.com/NixOS/nixpkgs/pulls?q=is%3Apr+is%3Aopen+');
addSearchAlias('ghr', 'GitHub Repos', 'https://github.com/search?type=repositories&q=');
addSearchAlias('gm', 'Google Maps', 'https://maps.google.com/maps?q=');
addSearchAlias('im', 'IMDB', 'https://www.imdb.com/find?s=all&q=');
addSearchAlias('md', 'MagnetDL', 'http://www.magnetdl.com/search/?m=1&q=');
addSearchAlias('no', 'Search Nix Options', 'https://search.nixos.org/options?channel=unstable&size=50&sort=relevance&type=packages&query=');
addSearchAlias('np', 'Search Nix Packages', 'https://search.nixos.org/packages?channel=unstable&from=0&size=50&sort=relevance&type=packages&query=');
addSearchAlias('pb', 'The Bay', 'https://thepiratebay.org/search.php?all=on&search=Pirate&q=');
addSearchAlias('prt', 'NixOS Pull Request Tracker', 'https://nixpk.gs/pr-tracker.html?pr=');
addSearchAlias('re', 'Reddit', 'https://www.reddit.com/search/?q=');
addSearchAlias('sp', 'Spotify', 'https://open.spotify.com/search/');
addSearchAlias('ud', 'Urban Dictionary', 'http://www.urbandictionary.com/define.php?term=');
addSearchAlias('wb', 'Wayback', 'https://web.archive.org/web/submit?type=urlquery&url=');
addSearchAlias('wi', 'Wokepedia', 'https://en.wikipedia.org/wiki/Special:Search?search=');
addSearchAlias('x', 'X', 'https://twitter.com/search?src=typed_query&q=');
#+END_SRC
** Theme
#+BEGIN_SRC css :tangle "/home/kev/dotfiles/firefox_ext_confs/surfingkeys/surfingkeys.js"
settings.theme = `
.sk_theme {
  font-family: Input Sans Condensed, Charcoal, sans-serif;
  font-size: 12pt;
  background: #002B36;
  color: #93A1A1;
}
.sk_theme input {
  color: #93A1A1;
}
.sk_theme .url {
  color: #268BD2;
}
.sk_theme .annotation {
  color: #93A1A1;
}
.sk_theme kbd {
  background: #EEE8D5;
  color: #111;
}
.sk_theme .omnibar_highlight {
  color: #CB4B16;
}
.sk_theme .omnibar_folder {
  color: #2AA198;
}
.sk_theme .omnibar_timestamp {
  color: #657B83;
}
.sk_theme .omnibar_visitcount {
  color: #B58900;
}
.sk_theme .prompt, .sk_theme .resultPage {
  color: #93A1A1;
}
.sk_theme .feature_name {
  color: #859900;
}
.sk_theme .separator {
  color: #859900;
}
.sk_theme #sk_omnibarSearchResult ul li:nth-child(odd) {
  background: #002F3B;
}
.sk_theme #sk_omnibarSearchResult ul li.focused {
  background: #083D4A;
}
#sk_status, #sk_find {
  font-size: 12pt;
}
#sk_keystroke {
  background: #002B36;
}
.expandRichHints span.annotation {
  color: #93A1A1;
}`;
#+END_SRC
* Waybar
** config
#+BEGIN_SRC conf :tangle "/home/kev/dotfiles/waybar/.config/waybar/config"
{
    "layer": "top",
    "position": "top",
    "height": 30,

    "modules-left": ["custom/launcher", "hyprland/workspaces", "hyprland/submap", "custom/spotify"],
    "modules-center": ["cava"],
    "modules-right": ["custom/weather", "tray", "idle_inhibitor", "custom/lgtv", "pulseaudio", "clock"],
    "sway/mode": {
        "format": " {}"
    },
    "sway/workspaces": {
        "format": "{name}",
        "disable-scroll": false,
        "enable-bar-scroll": true,
    },
    "hyprland/workspaces": {
      "on-scroll-up": "hyprctl dispatch workspace e+1",
      "on-scroll-down": "hyprctl dispatch workspace e-1",
     "on-click": "activate",
    },

    "hyprland/submap": {
      "format": "{}",
      "max-length": 30,
      "tooltip": false
    },

    "sway/window": {
        "max-length": 80,
        "tooltip": false
    },
    "clock": {
        "format": "{:%a %b %d %I:%M%p}",
        "tooltip": false
    },
    "battery": {
        "format": "{capacity}% {icon}",
        "format-alt": "{time} {icon}",
        "format-icons": ["", "", "", "", ""],
        "format-charging": "{capacity}% ",
        "interval": 30,
        "states": {
            "warning": 25,
            "critical": 10
        },
        "tooltip": false
    },
    "network": {
        "format": "{icon}",
        "format-alt": "{ipaddr}/{cidr} {icon}",
        "format-alt-click": "click-right",
        "format-icons": {
            "wifi": ["", "" ,""],
            "ethernet": [""],
            "disconnected": [""]
        },
        "on-click": "kitty -e nmtui",
    "tooltip": false
    },
    "pulseaudio": {
        "format": "{icon} {volume}%",
        "format-alt": "{volume} {icon}",
        "format-alt-click": "click-right",
        "format-muted": "婢",
        "format-icons": {
            "phone": [" ", " ", " ", " "],
            "default": [" ", " ", " "]
        },
        "max-volume": 110,
        "scroll-step": 1,
        "on-click": "pavucontrol",
        "tooltip": false
    },
    "custom/spotify": {
        "interval": 1,
        "return-type": "json",
        "exec": "/home/kev/.config/waybar/modules/spotify.sh",
        "exec-if": "pgrep firefox || pgrep vivaldi",
        "escape": true
    },
    "custom/storage": {
        "format": "{} ",
        "format-alt": "{percentage}% ",
        "format-alt-click": "click-right",
        "return-type": "json",
        "interval": 60,
        "exec": "~/.config/waybar/modules/storage.sh"
    },
    "backlight": {
        "format": "{icon}",
        "format-alt": "{percent}% {icon}",
        "format-alt-click": "click-right",
        "format-icons": ["", ""],
        "on-scroll-down": "light -A 1",
        "on-scroll-up": "light -U 1"
    },
    "custom/weather": {
        "format": "{}",
        "format-alt": "{alt}: {}",
        "format-alt-click": "click-right",
        "interval": 1800,
        "return-type": "json",
        "exec": "wttrbar --date-format \"%m/%d\" --location Oshawa --hide-conditions --ampm --custom-indicator \"{ICON}{temp_C}({FeelsLikeC})\"",
        "exec-if": "ping wttr.in -c1"
    },
    "idle_inhibitor": {
        "format": "{icon}",
        "format-icons": {
            "activated": " ",
            "deactivated": " "
        },
        "tooltip": false
    },
    "custom/mail": {
        "format": "",
        "format-alt": "{alt} ",
        "format-alt-click": "click-right",
        "interval": 60,
        "return-type": "json",
        "exec": "~/.config/waybar/modules/mail.py",
        "tooltip": false
    },
    "tray": {
        "icon-size": 16,
        "spacing": 10,
    },
    "custom/launcher": {
//        "format": " <span color='#6a92d7'> </span>",
        "format": "  ",
        "on-click": "jgmenu_run",
    },
    "custom/kev-menu": {
        "format": " #",
        "on-click": "/home/kev/bin/jgmenu_kev.sh -c",
        "on-click-right": "/home/kev/bin/jgmenu_spotify",
    },
    "custom/mako": {
        "format": "@",
        "on-click": "makoctl menu wofi -W 15% -H 10% -x 800 -y 5 -d -p 'Choose Action: '",
    },
    "custom/lgtv": {
        "format": "󰻅 ",
        "on-click": "lgtvgui",
    },
    "cava": {
    //        "cava_config": "$XDG_CONFIG_HOME/cava/config",
            "framerate": 30,
            "autosens": 0,
            "sensitivity": 5,
            "bars": 35,
            "lower_cutoff_freq": 25,
            "higher_cutoff_freq": 12000,
            "method": "pipewire",
            "source": "auto",
            "stereo": true,
            "reverse": false,
            "bar_delimiter": 0,
            "monstercat": false,
            "waves": true,
            "noise_reduction": 0.77,
            "input_delay": 2,
            "format-icons" : ["▁", "▂", "▃", "▄", "▅", "▆", "▇", "█" ],
            "actions": {
                "on-click-right": "mode"
            },
    },
}
#+END_SRC
** style.css
#+BEGIN_SRC css :tangle "/home/kev/dotfiles/waybar/.config/waybar/style.css"
,* {
    border: none;
    border-radius: 0;
    font-family: Victor Mono, Roboto, Helvetica, Arial, sans-serif;
    font-size: 16px;
    min-height: 0;
}

window#waybar {
    background: rgba(250, 250, 250, 0.4);
    border-bottom: 1px solid rgba(100, 114, 125, 1);
    color: white;
    padding: 0 2px;
}

tooltip {
  background: rgba(43, 48, 59, 0.8);
  border: 1px solid rgba(100, 114, 125, 0.5);
}
tooltip label {
  color: white;
}

#workspaces button {
    padding: 0 2px;
    background: transparent;
    color: white;
    border-top: 3px solid transparent;
}

#workspaces button.focused, #workspaces button.active {
	border-top: 3px  solid white ;
	color:  white ;
}

#mode, #clock, #battery, #tray, #idle_inhibitor, #custom-lgtv, #pulseaudio {
    padding: 0 10px;
    background-color: rgba(43, 48, 59, 0);
}

#mode {
    background: #64727D;
    border-bottom: 3px solid white;
}

#clock {
    color: rgba(255, 255, 255, 1.0);
}

#cava {
  min-width: 800px;
}

@keyframes blink {
    to {
        background-color: #ffffff;
        color: black;
    }
}

#+END_SRC
