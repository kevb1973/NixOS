[[language]]
name = "nix"
# formatter = { command = "alejandra" }
language-servers = ["nixd", "nil", "scls"]


[[language]]
name = "yaml"
formatter = { command = "prettier" }
auto-format = true

[[Language]]
name = "bash"
formatter = { command = "shfmt" }
language-servers = ["bash-language-server", "scls"]

[[Language]]
name = "hyprlang"
language-servers = ["hyprls"]

[[Language]]
name = "toml"
language-servers = ["tombi", "scls"]
# formatter = { command = "tombi", args = ["format", "-"] }

[language-server.nixd]
command = "nixd"

[language-server.scls]
command = "simple-completion-language-server"

[language-server.scls.config]
max_completion_items = 100
feature_words = true
feature_snippets = true
snippets_first = true
snippets_inline_by_word_tail = false
feature_unicode_input = false

[language-server.tombi]
command = "tombi"
args = ["--no-cache","lsp"]

## PYTHON
# [language-server.basedpyright.config]
# basedpyright.analysis.autoSearchPaths = true
# basedpyright.analysis.autoImportCompletion = true
# basedpyright.analysis.diagnosticMode = "workspace"
# basedpyright.analysis.typeCheckingMode = "standard"

# I often get false positive errors due to using libraries with many union types
# were the method I use may be invalid depending on the actual instance type.
# JetBrains PyCharm accepts this without any warning or error lint
# Degrade level to warning in most of these cases.
# basedpyright.analysis.diagnosticSeverityOverrides.reportArgumentType = "warning"
# basedpyright.analysis.diagnosticSeverityOverrides.reportGeneralTypeIssues = "warning"
# basedpyright.analysis.diagnosticSeverityOverrides.reportOperatorIssue = "warning"
# basedpyright.analysis.diagnosticSeverityOverrides.reportOptionalIterable = "warning"
# basedpyright.analysis.diagnosticSeverityOverrides.reportOptionalMemberAccess = "warning"
# basedpyright.analysis.diagnosticSeverityOverrides.reportOptionalOperand = "warning"
# basedpyright.analysis.diagnosticSeverityOverrides.reportOptionalSubscript = "warning"

# [language-server.ruff]
# command = "ruff"
# args = ["server"]

# [[language]]
# name = "python"
# roots = ["pyproject.toml", "requirements.txt"]
# language-servers = [ "basedpyright", "ruff", "scls" ]
# auto-format = true
